# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: projet actios docker

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn clean install

#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v1
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
#
#      - name: Login to DockerHub
#        uses: docker/login-action@v1
#
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2

#        with:
#          context: .
#          push: true
#          tags: user/app:latest
#      - name: Checkout
#        uses: actions/checkout@v2
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
#
#      - name: Login to DockerHub
#        uses: docker/login-action@v1
#
#        with:
#          image: moises3535/springboot-actions-new
#          tags: latest
#          registry: docker.io
#          dockerfile: Dockerfile
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      - name: Build
#        uses: docker/build-push-action@v2

#    - name: Build & push Docker image
#      uses: mr-smithers-excellent/docker-build-push@v5
#      with:
#        image: moises3535/springboot-actions-new
#        tags: latest
#        registry: docker.io
#        dockerfile: Dockerfile
#        password: ${{ secrets.DOCKER_PASSWORD }}
#        username: ${{ secrets.DOCKER_USERNAME }}
